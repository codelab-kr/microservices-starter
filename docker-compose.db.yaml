version: '3'
services:
  redis:
    image: redis:latest
    container_name: redis-db
    ports:
      - 6379:6379
    volumes:
      - redis:/datas

  mysql:
    image: mysql:8
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_TCP_PORT: ${DB_PORT}
      TZ: ${DB_TZ}
    command:
      - --default-authentication-plugin=mysql_native_password
      - --default-time-zone=+09:00
      # - --init-file=/data/application/init.sql # for init sql
    volumes:
      - mysql_data:/var/lib/mysql
      - ./databases/mysql/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
      - ./databases/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      # - ./databases/mysql/init-for-test.sql:/data/application/init.sql # for init sql
    ports:
      - '3306:3306'
    restart: always

  mongodb-primary:
    image: mongo:6.0.3
    environment:
      - MONGO_ADVERTISED_HOSTNAME=mongodb-primary
      - MONGO_REPLICA_SET_MODE=primary
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE}
    ports:
      - '27017:27017'
    volumes:
      - mongodb_master_data:/data/db
      - ./databases/mongo/mongodb.key:/etc/mongodb.key:z
    command:
      [
        '--replSet',
        'mongoReplicaSet',
        '--keyFile',
        '/etc/mongodb.key',
        '--bind_ip_all',
      ]

  mongodb-secondary:
    image: mongo:6.0.3
    depends_on:
      - mongodb-primary
    environment:
      - MONGO_ADVERTISED_HOSTNAME=mongodb-secondary
      - MONGO_REPLICA_SET_MODE=secondary
      - MONGO_INITIAL_PRIMARY_HOST=mongodb-primary
      - MONGO_INITIAL_PRIMARY_ROOT_USERNAME=root
      - MONGO_INITIAL_PRIMARY_ROOT_PASSWORD=${MONGO_PASSWORD}
    ports:
      - 27018:27017
    volumes:
      - mongodb_secondary_data:/data/db
      - ./databases/mongo/mongodb.key:/etc/mongodb.key:z
    command:
      [
        '--replSet',
        'mongoReplicaSet',
        '--keyFile',
        '/etc/mongodb.key',
        '--bind_ip_all',
      ]

  mongodb-arbiter:
    image: mongo:6.0.3
    depends_on:
      - mongodb-primary
    environment:
      - MONGO_ADVERTISED_HOSTNAME=mongodb-arbiter
      - MONGO_REPLICA_SET_MODE=arbiter
      - MONGO_INITIAL_PRIMARY_HOST=mongodb-primary
      - MONGO_INITIAL_PRIMARY_ROOT_USERNAME=root
      - MONGO_INITIAL_PRIMARY_ROOT_PASSWORD={MONGO_PASSWORD}
    ports:
      - 27019:27017
    volumes:
      - mongodb_arbiter_data:/data/db
      - ./databases/mongo/mongodb.key:/etc/mongodb.key:z
    command:
      [
        '--replSet',
        'mongoReplicaSet',
        '--keyFile',
        '/etc/mongodb.key',
        '--bind_ip_all',
      ]

  init-replica:
    image: mongo:6.0.3
    depends_on:
      - mongodb-primary
      - mongodb-secondary
      - mongodb-arbiter
    command: >
      bash -c '
        sleep 10 &&
        mongosh --host mongodb-primary:27017 -u root -p ${MONGO_PASSWORD}  --authenticationDatabase admin  --eval "
          rs.initiate({
            _id: \"mongoReplicaSet\",
            members: [
              { _id: 0, host: \"mongodb-primary:27017\" },
              { _id: 1, host: \"mongodb-secondary:27017\" },
              { _id: 2, host: \"mongodb-arbiter:27017\", arbiterOnly: true }
            ]
          });
        "
      '

volumes:
  mysql_data:
    driver: local
  redis:
    driver: local
  mongodb_master_data:
    driver: local
  mongodb_secondary_data:
    driver: local
  mongodb_arbiter_data:
    driver: local
