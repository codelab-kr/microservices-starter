pipeline {
    agent {
        kubernetes {
            label 'default'
        } 
    }
    // agent {
    //     docker {
    //             image 'docker:latest'
    //             args '--entrypoint="" --user root -v /var/run/docker.sock:/var/run/docker.sock'
    //     }
    // }



    stages {
        stage('Clone repository') {
            steps {
                checkout scm
                echo env.STAGE
                echo env.SERVICE
                echo env.TAG
            }
        }

        stage('Build image') {
            // steps {
                // script {
                //     // echo docker --version
                //     def imageName = "ap-seoul-1.ocir.io/cnqphqevfxnp/${env.STAGE}-${env.SERVICE}"
                //     def image = docker.build(imageName, "-f apps/${env.SERVICE}/Dockerfile --target ${env.STAGE} .")
                //     env.IMAGE_ID = image.id
                // }
                
            // }
            steps {
                container('dind') {}
                    sh 'docker build -t ap-seoul-1.ocir.io/cnqphqevfxnp/${env.STAGE}-${env.SERVICE}:${env.TAG} -f apps/${env.SERVICE}/Dockerfile --target ${env.STAGE} .'                    
                }
            }
        

        // stage('Test image') {
        //     steps {
        //         script {
        //             def image = docker.image(env.IMAGE_ID)
        //             image.inside {
        //                 def testResult = sh(script: 'yarn test users', returnStatus: true)
        //                 env.TEST_RESULT = testResult.toString()
        //             }
        //         }
        //     }
        // }

        stage('Deliver') {
            // steps {
            //     script {
            //         def image = docker.image(env.IMAGE_ID)
            //         docker.withRegistry('https://ap-seoul-1.ocir.io', 'ocir-seoul') {
            //             image.push(env.TAG)
            //         }
            //     }
            // }

            steps {
                container('dind') {
                    withCredentials([usernamePassword(credentialsId: 'ocir-seoul', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh 'echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin https://ap-seoul-1.ocir.io'
                        sh 'docker push ap-seoul-1.ocir.io/cnqphqevfxnp/${env.STAGE}-${env.SERVICE}:${env.TAG}' 
                    } 
                }
            }
            
        }
    }
}