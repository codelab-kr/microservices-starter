pipeline {
    agent any
    // agent { 
    //     node {
    //         label 'docker-agent2'
    //     }
    

    stages {
        stage('Clone repository') {
            steps {
                checkout scm
            }
        }

        stage('Build and push image') {
            steps {
                script {
                    // echo docker --version
                    def imageName = "ap-seoul-1.ocir.io/cnqphqevfxnp/${env.STAGE}-${env.SERVICE}"
                    def image = docker.build(imageName, "-f apps/${env.SERVICE}/Dockerfile --target ${env.STAGE} .")
                    env.IMAGE_ID = image.id
                }
            }
        }

        stage('Test image') {
            steps {
                script {
                    def image = docker.image(env.IMAGE_ID)
                    image.inside {
                        def testResult = sh(script: 'yarn test users', returnStatus: true)
                        env.TEST_RESULT = testResult.toString()
                    }
                }
            }
        }

        stage('Deliver') {
            steps {
                echo 'Deliver'
                script {
                    docker.withRegistry('https://ap-seoul-1.ocir.io', 'ocir-seoul') {
                        image.push($TAG)
                    }
                }
            }
        }
    }
}