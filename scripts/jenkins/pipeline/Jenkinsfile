node('docker') {
    stage('Clone repository') {
        checkout scm
        def output
        script {
            output = sh(returnStdout: true, script: '''#!/bin/bash
            commits=($(git diff-tree --no-commit-id --name-only -r HEAD))
            services=("api" "history" "payments" "posts" "users" "storage" "videos")
            result=()

            for commit in "${commits[@]}"; do
                directory=$(dirname "$commit");
                filename=$(basename "$commit" .yaml);
                for service in "${services[@]}"; do
                    if [[ $directory == *"${service}"* ]] || [[ $filename == $service ]]; then
                        result+=($service)
                    fi
                done
            done

            svc=$(echo "${result[@]}" | tr ' ' '\n' | sort -u | tr '\n' ' ')
            echo $svc.trim()
            '''            
            ).trim()
        }
        env.SERVICES = output
    }



    stage('Trigger services') { 
        steps {
            script {
                echo SERVICES
                def array = env.SERVICES.split(' ')
                echo array
                env.STAGE = "development"
                env.TAG = "0.${BUILD_NUMBER}"
                echo "STAGE: ${STAGE}"
                echo "TAG: ${TAG}"

                for (int i = 0; i < array.size(); i++) {
                    def service = array[i]
                    echo "[${i}] -${service}- service is triggered."

                    stage('Trigger service job') { 
                        echo "triggering start-service-job"
                        build job: 'start-service-job', parameters: [
                            string(name: 'STAGE', value: env.STAGE),
                            string(name: 'SERVICE', value: service),
                            string(name: 'TAG', value: env.TAG)
                        ]
                    }
                }
            }
        }
    }
}
